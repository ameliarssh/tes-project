/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simrs;

//import java.sql.PreparedStatement;
import java.sql.Connection;
import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class frmDokter extends javax.swing.JDialog {

    private Connection koneksi;
   // private final DefaultTabModel tabMode;

    /**
     * Creates new form frmDokter
     */
    public frmDokter(java.awt.Frame parent, boolean modal) {
//         public frmDokter(java.awt.Frame parent, boolean modal) {
   //     super(parent, modal);
         initComponents();
         KoneksiDatabase();
          TampilData();
        setLocationRelativeTo(this);
       
        
      //  tabMode=new DefaultTabModel(null, new String[]{"Kode Dokter", "Nama Dokter", "J.K", "Alamat"}){
     //    @Override  boolean isCellEditable(int rowIndex, intcoIndex){return false;}
        
      ///  };         
      }
          /*      tabmode=new DefaultTabModel(null, new String][]{"Kode Dokter", "Nama Dokter", "J.K", "Alamat"}){
            @Override  boolean isCellEditable(int rowIndex, intcoIndex){}
    };*/
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAlamat = new javax.swing.JTextField();
        txtKodeDokter = new javax.swing.JTextField();
        txtNamaDokter = new javax.swing.JTextField();
        txtJK = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        BtnKeluar = new javax.swing.JButton();
        BtnBatal = new javax.swing.JButton();
        BtnSimpan = new javax.swing.JButton();
        BtnHapus = new javax.swing.JButton();
        BtnUbah = new javax.swing.JButton();
        BtnCari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabeldokter = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("::[MASTER DOKTER]::");
        setUndecorated(true);
        setSize(new java.awt.Dimension(700, 700));
        getContentPane().setLayout(new java.awt.BorderLayout(1, 1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 255)), ":[MASTER DOKTER]:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(153, 153, 255))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 250));
        jPanel2.setLayout(new java.awt.BorderLayout(1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(2, 170));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Alamat :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 110, 70, 11);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Kode Dokter :");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 20, 80, 11);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nama Dokter :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 50, 80, 11);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("J.K :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 80, 70, 11);
        jPanel1.add(txtAlamat);
        txtAlamat.setBounds(110, 110, 180, 40);

        txtKodeDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeDokterActionPerformed(evt);
            }
        });
        jPanel1.add(txtKodeDokter);
        txtKodeDokter.setBounds(110, 20, 100, 19);
        jPanel1.add(txtNamaDokter);
        txtNamaDokter.setBounds(110, 50, 180, 19);

        txtJK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-Laki", "Perempuan" }));
        txtJK.setOpaque(false);
        txtJK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJKActionPerformed(evt);
            }
        });
        jPanel1.add(txtJK);
        txtJK.setBounds(110, 80, 100, 19);

        jPanel2.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(255, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(2, 50));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnKeluar.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/101.png"))); // NOI18N
        BtnKeluar.setText("Keluar");
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        jPanel3.add(BtnKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 90, 30));

        BtnBatal.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cancel.png"))); // NOI18N
        BtnBatal.setText("Batal");
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        jPanel3.add(BtnBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 100, 30));

        BtnSimpan.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Save.png"))); // NOI18N
        BtnSimpan.setText("Simpan");
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        jPanel3.add(BtnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 30));

        BtnHapus.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        BtnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/delete_folder.png"))); // NOI18N
        BtnHapus.setText("Hapus");
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });
        jPanel3.add(BtnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 90, 30));

        BtnUbah.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        BtnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Edit.png"))); // NOI18N
        BtnUbah.setText("Ubah");
        BtnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUbahActionPerformed(evt);
            }
        });
        jPanel3.add(BtnUbah, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 90, 30));

        BtnCari.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnCari.setText("Cari");
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        jPanel3.add(BtnCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 90, 30));

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        tabeldokter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabeldokter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabeldokterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabeldokter);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(698, 538));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtJKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJKActionPerformed

    private void txtKodeDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeDokterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeDokterActionPerformed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        // TODO add your handling code here:
    txtKodeDokter.setText("");
    txtNamaDokter.setText("");
    txtJK.setSelectedIndex(-0);
    txtAlamat.setText("");
    txtKodeDokter.requestFocus();
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void tabeldokterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabeldokterMouseClicked
        // TODO add your handling code here:
        int baris = tabeldokter.getSelectedRow();
        if (baris != -1) {
            txtKodeDokter.setText(tabeldokter.getValueAt(baris, 0).toString());
            txtNamaDokter.setText(tabeldokter.getValueAt(baris, 1).toString());
            txtJK.setSelectedItem(tabeldokter.getValueAt(baris, 2).toString());
            txtAlamat.setText(tabeldokter.getValueAt(baris, 3).toString());
        }
    }//GEN-LAST:event_tabeldokterMouseClicked

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        // TODO add your handling code here:
        /* try{
            MysqlDataSource server = new MysqlDataSource();
            server.setDatabaseName("simrs");
            server.setPassword("");
            server.setUser("root");
            server.setPort(3306);
            server.setServerName("localhost");
            Connection koneksi=server.getConnection();
            PreparedStatement ps=koneksi.prepareStatement("insert into dokter values(?,?,?,?)");
            try {
                ps.setString(1, txtKodeDokter.getText());
                ps.setString(2, txtNamaDokter.getText());
                ps.setString(3, txtJK.getSelectedItem().toString().substring(0,1));
                ps.setString(4, txtAlamat.getText());
                ps.execute();
                txtKodeDokter.setText("");
                txtNamaDokter.setText("");
                txtAlamat.setText("");
                txtJK.setSelectedIndex(0);
                txtKodeDokter.requestFocus();
                JOptionPane.showMessageDialog(null, "Data Berhasil Di Simpan", "SUKSES", JOptionPane.INFORMATION_MESSAGE);  
                TampilData();
            } catch (Exception e) {
                System.out.println("Notif : "+e);
            }
        } catch (Exception e){
            System.out.println("Notif : "+e);
        }
        */
        
        String kodedokter = txtKodeDokter.getText();
        String namadokter = txtNamaDokter.getText();
        String jeniskelamin = (String) txtJK.getSelectedItem();
        String alamat = txtAlamat.getText();
    
    if (txtKodeDokter.getText().trim().equals("")) {
        JOptionPane.showMessageDialog(null, "Mohon Masukkan Data untuk di Input", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
    } else {
             try {
             java.sql.Statement stat = koneksi.createStatement();
             ResultSet data = stat.executeQuery("SELECT * FROM dokter WHERE kodedokter ='" + txtKodeDokter.getText() + "'");
             if (data.next()) {
                 JOptionPane.showMessageDialog(null, "Kode dokter Sudah Ada", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
                 txtKodeDokter.requestFocus();
             } else {
                String sql = "INSERT INTO dokter VALUES('" + kodedokter + "'"
                       + ",'" + namadokter + "'"
                       + ",'" + jeniskelamin + "'"
                       + ",'" + alamat + "')";
                stat.executeUpdate(sql);
                txtKodeDokter.setText("");
                txtNamaDokter.setText("");
                txtJK.setSelectedIndex(-0);
                txtAlamat.setText("");
                txtKodeDokter.requestFocus();
                JOptionPane.showMessageDialog(null, "Data Berhasil Di Simpan", "SUKSES", JOptionPane.INFORMATION_MESSAGE);  
                TampilData();
             }
                stat.close();
            } catch (Exception exc) {
                System.err.println("Terjadi Kesalahan :" + exc);
         }
    }
        
        
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        // TODO add your handling code here:
    int ok = JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus data ini?", "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
if (ok == 0) {
    String sql = "DELETE FROM dokter WHERE kodedokter='" + txtKodeDokter.getText().trim() + "'";
    try {
         Statement stat = koneksi.createStatement();
         stat.executeUpdate(sql);
         JOptionPane.showMessageDialog(null, "Data Berhasil di Hapus", "Hapus Data", JOptionPane.INFORMATION_MESSAGE);
         stat.close();
         txtKodeDokter.setText("");
         txtNamaDokter.setText("");
         txtAlamat.setText("");
         txtJK.setSelectedIndex(-0);
         txtKodeDokter.requestFocus();
         TampilData();
      } catch (java.sql.SQLException exc) {
          System.err.println(sql);
          System.err.println("Error : " + exc);
      }
}
    }//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUbahActionPerformed
        // TODO add your handling code here:
       int ok = JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin mengubah data ini?", "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
if (ok == 0) {

String sql = "update dokter set namadokter='" + txtNamaDokter.getText()
        + "',jeniskelamin='" + txtJK.getSelectedItem()
        + "',alamat='" + txtAlamat.getText()
        + "'where kodedokter='" + txtKodeDokter.getText().trim() + "'";
if (txtNamaDokter.getText().trim().equals("")) {
    JOptionPane.showMessageDialog(null, "Data Masih Kosong!", "Ubah Data", JOptionPane.WARNING_MESSAGE);
    txtNamaDokter.requestFocus();
} else {
    try {
         Statement stat = koneksi.createStatement();
         stat.executeUpdate(sql);
         JOptionPane.showMessageDialog(null, "Data Berhasil di Ubah", "Ubah Data", JOptionPane.INFORMATION_MESSAGE);
         stat.close();
         txtNamaDokter.requestFocus();
         TampilData();
    } catch (Exception exc) {
        System.err.println("Error :" + exc);
    }
  }
}
    }//GEN-LAST:event_BtnUbahActionPerformed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        // TODO add your handling code here:
        try {
    java.sql.Statement stat = koneksi.createStatement();
  
    /*ResultSet data = stat.executeQuery("select * from dokter where kodedokter like '%"+
                    txtKodeDokter.getText()+"%' OR namadokter like '%"+ txtNamaDokter.getText()+"%'"
                            + "OR alamat like '%"+ txtAlamat.getText()+"%'" 
                            + "OR alamat jeniskelamin '%"+ txtJK.getSelectedItem()+"%'");*/
    
ResultSet data = stat.executeQuery("select * from dokter where kodedokter like '%"+
                    txtKodeDokter.getText()+"%' OR namadokter like '%"+ txtNamaDokter.getText()+"%'");
// ResultSet data = stat.executeQuery("SELECT * FROM dokter WHERE " + "kodedokter,namadokter,jeniskelamin,alamat='" + txtKodeDokter.getText() + "'");
    
    
    // "dokter.stts_nikah,spesialis.nm_sps,dokter.alumni,dokter.no_ijn_praktek "+
    //ResultSet data = stat.executeQuery("SELECT * from obat WHERE kodedokter LIKE '%"+key+"%' OR namadokter LIKE '%"+key+"%' OR jeniskelamin LIKE '%"+key+"%'");
    //RsProduk=stt.executeQuery("SELECT * from obat WHERE kodedokter LIKE '%"+key+"%' OR namadokter LIKE '%"+key+"%' OR jeniskelamin LIKE '%"+key+"%'");  
  
   // ResultSet rs=koneksi.createStatement().executeQuery("select * from dokter where kodedokter like '%"+
   //                 txtKodeDokter.getText()+"%' or password like '%"+
   //                 txtNamaDokter.getText()+"%'");
   //                     while (rs.next()){
    //                    String[] data={rs.getString(1), rs.getString(2)};
    //                    tabmode.addRow(data);
   //                     }
    //"SELECT * FROM Dokter WHERE " + kolom + " = '" + data +"'"
    
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Dokter");
    model.addColumn("Nama Dokter");
    model.addColumn("Jenis Kelamin");
    model.addColumn("Alamat");
    tabeldokter.setModel(model);

    if (data.next()) {
        model.addRow(new Object[]{
              data.getString("kodedokter"),
              data.getString("namadokter"),
              data.getString("jeniskelamin"),
              data.getString("alamat")
        });
        tabeldokter.setModel(model);
    } else {
       JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan", "WARNING", JOptionPane.WARNING_MESSAGE);
    }
    stat.close();
} catch (Exception e) {
    System.err.println("Terjadi Kesalahan :" + e);
}
    }//GEN-LAST:event_BtnCariActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmDokter dialog = new frmDokter(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    void setExtendedState(int MAXIMIZED_BOTH) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void KoneksiDatabase() {
        try {
 Class.forName("com.mysql.jdbc.Driver");
 } catch (ClassNotFoundException cnf) {
 }
  try {
      koneksi = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/simrs", "root", "");
      //JOptionPane.showMessageDialog(null, "Koneksi Database Berhasil");
 } catch (java.sql.SQLException se) {
      JOptionPane.showMessageDialog(null, "Koneksi Database Tidak Berhasil");
 } catch (Exception e) {
 }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBatal;
    private javax.swing.JButton BtnCari;
    private javax.swing.JButton BtnHapus;
    private javax.swing.JButton BtnKeluar;
    private javax.swing.JButton BtnSimpan;
    private javax.swing.JButton BtnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabeldokter;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JComboBox<String> txtJK;
    private javax.swing.JTextField txtKodeDokter;
    private javax.swing.JTextField txtNamaDokter;
    // End of variables declaration//GEN-END:variables

    private void TampilData() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Dokter");
        model.addColumn("Nama Dokter");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Alamat");
        tabeldokter.setModel(model);

        //menampilkan data database kedalam tabel
        try {
            java.sql.Statement stat = koneksi.createStatement();
            ResultSet data = stat.executeQuery("SELECT * FROM dokter");
            while (data.next()) {
                 model.addRow(new Object[]{
                    data.getString("kodedokter"),
                    data.getString("namadokter"),
                    data.getString("jeniskelamin"),
                    data.getString("alamat"),
                 });
                 tabeldokter.setModel(model);
            }
        } catch (Exception e) {
            System.err.println("Terjadi Kesalahan :" + e);
        }
            }
    }
//}
